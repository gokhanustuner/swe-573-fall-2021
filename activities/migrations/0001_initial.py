# Generated by Django 3.2.11 on 2022-01-09 13:31

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True, verbose_name='Event ID')),
                ('title', models.CharField(max_length=500, verbose_name='Title')),
                ('description', models.TextField(verbose_name='Description')),
                ('location', models.TextField()),
                ('start_date', models.DateTimeField(verbose_name='Start data')),
                ('duration', models.PositiveIntegerField(verbose_name='Duration')),
                ('repetition_term', models.PositiveSmallIntegerField(choices=[(1, 'One-Time'), (2, 'Weekly'), (3, 'Monthly'), (4, 'Yearly')], default=1, verbose_name='Repetition term')),
                ('privacy_status', models.PositiveSmallIntegerField(choices=[(1, 'Public'), (2, 'Private')], default=1, verbose_name='Privacy status')),
                ('participant_limit', models.PositiveIntegerField(default=0, verbose_name='Participant limit')),
                ('participant_picking', models.PositiveSmallIntegerField(choices=[(1, 'Free'), (2, 'Pick participants')], default=1, verbose_name='Participant picking')),
                ('category', models.PositiveSmallIntegerField(choices=[(1, 'Food'), (2, 'Music'), (3, 'Education'), (4, 'Arts'), (5, 'Entertainment'), (6, 'Technical'), (7, 'Craftsmanship'), (8, 'Repair and maintenance'), (9, 'Sports'), (10, 'Travel Activities')], default=1, verbose_name='Event category')),
                ('content', models.TextField(verbose_name='Service content')),
                ('cancelled', models.BooleanField(choices=[(0, 'No'), (1, 'Yes')], default=0, max_length=1, verbose_name='Cancelled')),
                ('delivered', models.BooleanField(choices=[(0, 'No'), (1, 'Yes')], default=0, max_length=1, verbose_name='Delivered')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='activities')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Event owner')),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='ActivityRate',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True, verbose_name='Event rate ID')),
                ('rate', models.PositiveSmallIntegerField(choices=[(1, 'Terrible'), (2, 'Bad'), (3, 'Neutral'), (4, 'Good'), (5, 'Excellent')], verbose_name='Event rate value')),
                ('content', models.TextField(verbose_name='Member comment for event')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='activities.activity')),
                ('voter', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Member attending to the event')),
            ],
        ),
        migrations.CreateModel(
            name='ActivityAttendanceRequest',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True, verbose_name='Event attendance request ID')),
                ('status', models.PositiveSmallIntegerField(choices=[(1, 'Approved'), (2, 'Declined'), (3, "Waiting for event owner's approval")], default=3, verbose_name='Event attendance request status')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='activities.activity')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activity_member_requested', to=settings.AUTH_USER_MODEL, verbose_name='Member requesting to attend to the event')),
                ('owner', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='activity_owner', to=settings.AUTH_USER_MODEL, verbose_name='Member to approve')),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='ActivityAttendance',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True, verbose_name='Event attendance ID')),
                ('status', models.PositiveSmallIntegerField(choices=[(1, 'Active'), (2, 'Cancelled')], default=1, verbose_name='Activity attendance status')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendances', to='activities.activity', verbose_name='Attended activity')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activity_member_attending', to=settings.AUTH_USER_MODEL, verbose_name='Member attending to the event')),
                ('owner', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='activity_attendance_owner', to=settings.AUTH_USER_MODEL, verbose_name='Member to approve')),
            ],
        ),
    ]
